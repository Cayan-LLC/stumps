@Master['master']

@Section['HeaderStylesheets']
	<link href="/content/toolbar.css" rel="stylesheet" />
	<link href="/content/multipanel.css" rel="stylesheet" />
	<link href="/content/stumpeditor.css" rel="stylesheet" />
@EndSection

@Section['Content']
	
	<div class="toolbar blueBackground" id="tb_main">
		<a href="@Model.BackUrl" class="left"><img src="/content/tb_back.png" />back</a>
		<a href="@Model.LocalWebsite" target="_blank" rel="noreferrer" class="right">@Model.ExternalHostName</a>
	</div>
	<div class="panelB">
		<div class="fill lightGreyBackground">
			<div class="pad">
				<h2>when the request is ... </h2>
				<table class="options">
					<tr><td class="keyNoInput"><label for="requrl_text">URL</label></td><td class="valueInput"><input type="text" id="requrl_text" /></td><td class="valueSelection"><input type="checkbox" id="requrl_chk" checked="checked"/></td></tr>
					<tr><td class="keyNoInput"><label for="reqmethod_text">Method</label></td><td class="valueInput"><input type="text" id="reqmethod_text" /></td><td class="valueSelection"><input type="checkbox" id="reqmethod_chk" checked="checked"/></td></tr>
				</table>
				<h2>when the headers are ... </h2>

				<table class="options" id="reqhdr_tbl">
					<tbody>
					</tbody>
				</table>
				<table class="links">
					<tr><td><label id="reqHdrLink_addNew">add a new header</label></td><td class="right"><label id="reqHdrLink_delUncheck">remove unchecked</label></td></tr>
				</table>
				<h2>when the body ... </h2>
				<table class="selection">
					<tr>
						<td><input type="radio" id="reqHdrBodyOpt1" name="reqHdrBodyOpt" value="0"><label for="reqHdrBodyOpt1">Is anything at all.</label></td>
						<td><input type="radio" id="reqHdrBodyOpt2" name="reqHdrBodyOpt" value="1"><label for="reqHdrBodyOpt2">Is completely blank.</label></td>
						<td><input type="radio" id="reqHdrBodyOpt3" name="reqHdrBodyOpt" value="2"><label for="reqHdrBodyOpt3">Is anything but blank.</label></td>
					</tr>
					<tr>
						<td><input type="radio" id="reqHdrBodyOpt4" name="reqHdrBodyOpt" value="3"><label for="reqHdrBodyOpt4">Contains the text ...</label></td>
						<td><input type="radio" id="reqHdrBodyOpt5" name="reqHdrBodyOpt" value="4"><label for="reqHdrBodyOpt5">Is exactly ...</label></td>
						<td>&nbsp;</td>
					</tr>
				</table>
				<div id="match_div" class="matchText hide">
					<table id="match_tbl">
						<tbody>
						</tbody>
					</table>
					<table class="links">
						<tr><td><label id="resMatchLink_addNew">add text criteria</label></td><td class="right"><label id="resMatchLink_delUncheck">remove unchecked</label></td></tr>
					</table>
				</div>
				<div id="reqBody" class="bodyView hide">
<pre id="reqBodyPre" class="hide"></pre>
<img src="" id="reqBodyImg" class="hide" />
				</div>
				<div id="reqBodyLinkDiv" class="bodyLinkDiv hide"><a href="" id="reqBodyLink" class="bodyLink" target="_blank" rel="noreferrer">+ Download Body</a></div>
			</div>
		</div>
	</div>
	<div class="panelB">
		<div class="fill">
			<div class="pad">
				<h2>Then respond With ... </h2>
				<table class="options">
					<tr><td class="keyNoInput"><label for="resstatuscode_text">Status Code</label></td><td class="valueInput"><input type="text" id="resstatuscode_text"/></td></tr>
					<tr><td class="keyNoInput"><label for="resstatusdesc_text">Status Description</label></td><td class="valueInput"><input type="text" id="resstatusdesc_text" /></td></tr>
				</table>

				<h2>using the headers ... </h2>
				<table class="options" id="reshdr_tbl">
					<tbody>
					</tbody>
				</table>
				<table class="links">
					<tr><td><label id="resHdrLink_addNew">add a new header</label></td><td class="right"><label id="resHdrLink_delUncheck">remove unchecked</label></td></tr>
				</table>
				<h2>using a body that is ... </h2>
				<table class="selection">
					<tr>
						<td><input type="radio" id="resHdrBodyOpt1" name="resHdrBodyOpt" value="0"><label for="resHdrBodyOpt1">Completely blank.</label></td>
						<td><input type="radio" id="resHdrBodyOpt2" name="resHdrBodyOpt" value="1"><label for="resHdrBodyOpt2">Same as the original.</label></td>
						<td><input type="radio" id="resHdrBodyOpt3" name="resHdrBodyOpt" value="2"><label for="resHdrBodyOpt3">Modified from the original.</label></td>
					</tr>
				</table>
				<div id="resBody" class="bodyView hide">
<pre id="resBodyPre" class="hide"></pre>
<img src="" id="resBodyImg" class="hide" />
				</div>
<textarea id="resBodyTextArea" class="bodyTextArea"></textarea>
				<div id="resBodyLinkDiv" class="bodyLinkDiv"><a href="" id="resBodyLink" class="bodyLink" target="_blank" rel="noreferrer">+ Download Body</a></div>
			</div>
		</div>
	</div>
	<div class="stumpInfo greenBackground">
		<table>
			<tr>
				<td>
					<label for="stmp_name">Name</label><input type="text" id="stmp_name" value="@Model.StumpName" />
					<label for="stmp_category">Category</label><select id="stmp_category" /><option value="uncategorized">Uncategorized</option></select>
				</td>
				<td class="right"><label class="button" id="saveButton">@Model.CreateButtonText</label></td>
			</tr>
		</table>
	</div>

@EndSection

@Section['Scripts']

var nextRequestHeaderIndex = -1;
var nextResponseHeaderIndex = -1;
var nextTextCriteria = -1;
var lockLoad = false;
var lockSaveStump = false;

var requestBody = "";
var requestBodyLength = 0;
var requestBodyViewable = false;
var requestBodyIsBinary = false;
var requestBodyIsImage = false;
var requestBodyIsText = false;

var responseBody = "";
var responseBodyLength = 0;
var responseBodyViewable = false;
var responseBodyIsBinary = false;
var responseBodyIsImage = false;
var responseBodyIsText = false;

var StumpOrigin = {
	Nothing: 0,
	RecordedContext: 1,
	ExistingStump: 2
};

var BodySource = {
	NoBody: 0,
	Origin: 1,
	Modified: 2
};

var BodyMatch = {
	IsAnything: 0,
	IsBlank: 1,
	IsNotBlank: 2,
	ContainsText: 3,
	ExactMatch: 4
}

$(document).ready(function() {

	@If.LoadRecord
	viewRequest(@Model.RecordIndex);
	@EndIf
	@If.LoadStump
	viewStump('@Model.StumpId');
	@EndIf

	$('#reqHdrLink_addNew').click(function(e) {

		var index = nextRequestHeaderIndex;

		var row = '<tr id="reqhdr_' + index + '">' +
				  '<td class="keyInput"><input type="text" id="reqhdr_name_' + index + '" value="" /></td>' +
				  '<td class="valueInput"><input type="text" id="reqhdr_value_' + index + '" value="" /></td>' +
				  '<td class="valueSelection"><input type="checkbox" id="reqhdr_chk_' + index + '" checked="checked"/></td>' +
				  '</tr>';

		$('#reqhdr_tbl tbody').append(row);

		index++;
		nextRequestHeaderIndex = index;

	});

	$('#resHdrLink_addNew').click(function(e) {
		var index = nextResponseHeaderIndex;

		var row = '<tr id="reshdr_' + index + '">' +
				  '<td class="keyInput"><input type="text" id="reshdr_name_' + index + '" value="" /></td>' +
				  '<td class="valueInput"><input type="text" id="reshdr_value_' + index + '" value="" /></td>' +
				  '<td class="valueSelection"><input type="checkbox" id="reshdr_chk_' + index + '" checked="checked"/></td>' +
				  '</tr>';

		$('#reshdr_tbl tbody').append(row);

		index++;
		nextResponseHeaderIndex = index;

	});

	$('#resMatchLink_addNew').click(function(e) {

		addTextCriteria();

	});

	$('#reqHdrLink_delUncheck').click(function(e) {
		$('#reqhdr_tbl input:checkbox').each(function() {
			if ( !this.checked ) {
				$(this).closest('tr').remove();
			}
		});
	});

	$('#resHdrLink_delUncheck').click(function(e) {
		$('#reshdr_tbl input:checkbox').each(function() {
			if ( !this.checked ) {
				$(this).closest('tr').remove();
			}
		});
	});

	$('#resMatchLink_delUncheck').click(function(e) {
		$('#match_tbl input:checkbox').each(function() {
			if ( !this.checked ) {
				$(this).closest('tr').remove();
			}
		});
	});

	$("input[name='reqHdrBodyOpt']").click(function() {
		updateRequestBodyOptions();
	});

	$("input[name='resHdrBodyOpt']").click(function() {
		updateResponseBodyOptions();
	});

	$('#saveButton').click(function() {
		saveStump();
	});

});

function addTextCriteria() {
	var index = nextTextCriteria;

	var row = '<tr id="match_' + index + '">' +
				'<td class="matchInput"><input type="text" id="match_value_' + index + '" value="" /></td>' +
				'<td class="matchSelection"><input type="checkbox" id="match_chk_' + index + '" checked="checked"/></td>' +
				'</tr>';

	$('#match_tbl tbody').append(row);

	index++;
	nextTextCriteria = index;
}

function ensureSingleTextCriteria() {

	var rowCount = $('#match_tbl tbody tr').length;
	if ( rowCount < 1 ) {
		addTextCriteria();
	}

}

@If.LoadStump
function saveStump() {
	
	if ( lockSaveStump ) {
		return;
	}

	var value = {
		  "Name" : $('#stmp_name').val(),
		  "Origin" : @Model.Origin,
		  "RecordId" : @Model.RecordIndex,
		  "RequestHeaderMatch" : saveHeaders('reqhdr'),
		  "RequestBodyMatch" : Number($("input[name='reqHdrBodyOpt']:checked").val()),
		  "RequestBodyMatchValues" : saveMatchText(),
		  "RequestHttpMethod" : $('#reqmethod_text').val(),
		  "RequestHttpMethodMatch" : $('#reqmethod_chk').prop('checked'),
		  "RequestUrl" : $('#requrl_text').val(),
		  "RequestUrlMatch" : $('#requrl_chk').prop('checked'),
		  "ResponseBodyModification" : $('#resBodyTextArea').val(),
		  "ResponseBodySource" : Number($("input[name='resHdrBodyOpt']:checked").val()),
		  "ResponseHeaders" : saveHeaders('reshdr'),
		  "ResponseStatusCode" : $('#resstatuscode_text').val(),
		  "ResponseStatusDescription" : $('#resstatusdesc_text').val(),
		  "StumpId" : "@Model.StumpId"
		};

    $.ajax({
        type: 'PUT',
        contentType: 'application/json; charset-utf-8',
		url: '/api/proxy/@Model.ProxyId/stumps/@Model.StumpId',
        dataType: "json",
		data: JSON.stringify(value),
        cache: false,
        success: saveButton_success,
		error: saveButton_error,
		complete: saveButton_complete
    });

	lockSaveStump = true;

}
@EndIf

@If.LoadRecord
function saveStump() {
	
	if ( lockSaveStump ) {
		return;
	}

	var value = {
		  "Name" : $('#stmp_name').val(),
		  "Origin" : @Model.Origin,
		  "RecordId" : @Model.RecordIndex,
		  "RequestHeaderMatch" : saveHeaders('reqhdr'),
		  "RequestBodyMatch" : Number($("input[name='reqHdrBodyOpt']:checked").val()),
		  "RequestBodyMatchValues" : saveMatchText(),
		  "RequestHttpMethod" : $('#reqmethod_text').val(),
		  "RequestHttpMethodMatch" : $('#reqmethod_chk').prop('checked'),
		  "RequestUrl" : $('#requrl_text').val(),
		  "RequestUrlMatch" : $('#requrl_chk').prop('checked'),
		  "ResponseBodyModification" : $('#resBodyTextArea').val(),
		  "ResponseBodySource" : Number($("input[name='resHdrBodyOpt']:checked").val()),
		  "ResponseHeaders" : saveHeaders('reshdr'),
		  "ResponseStatusCode" : $('#resstatuscode_text').val(),
		  "ResponseStatusDescription" : $('#resstatusdesc_text').val(),
		  "StumpId" : "@Model.StumpI"d
		};

    $.ajax({
        type: 'POST',
        contentType: 'application/json; charset-utf-8',
		url: '/api/proxy/@Model.ProxyId/stumps',
        dataType: "json",
		data: JSON.stringify(value),
        cache: false,
        success: saveButton_success,
		error: saveButton_error,
		complete: saveButton_complete
    });

	lockSaveStump = true;

}
@EndIf

function saveButton_success() {
	location.href = "/proxy/@Model.ProxyId/stumps";
}

function saveButton_error(event, request, settings) {
	
}

function saveButton_complete() {
	lockSaveStump = false;
}

function saveMatchText() {

	var values = new Array();

	var checkBoxes = $("#match_tbl input[type='checkbox']:checked");
	
	for ( var i = 0; i < checkBoxes.length; i++ ) {
		var id = '#match_value_' + checkBoxes[i].id.replace('match_chk_', '');
		var value = $(id).val();

		if ( value.length > 0 ) {
			values.push(value);
		}
	}

	return values;

}

function saveHeaders(prefix) {

	var values = new Array();

	var checkBoxes = $("#" + prefix + "_tbl input[type='checkbox']:checked");
	
	for ( var i = 0; i < checkBoxes.length; i++ ) {
		var nameId = '#' + prefix + '_name_' + checkBoxes[i].id.replace(prefix + '_chk_', '');
		var valueId = '#' + prefix + '_value_' + checkBoxes[i].id.replace(prefix + '_chk_', '');

		var headerName = $(nameId).val();
		var headerValue = $(valueId).val();

		if ( headerName.length > 0 ) {
			var value = {
				"Name" : headerName,
				"Value" : headerValue
			};

			values.push(value);
		}
	}

	return values;

}

function updateRequestBodyOptions() {

	var showContent = false;	
	var showContainsMatch = false;
	var value = Number($("input[name='reqHdrBodyOpt']:checked").val());

	// hide everything
	$('#reqBody').addClass('hide');
	$('#reqBodyLinkDiv').addClass('hide');
	$('#match_div').addClass('hide');

	switch ( value ) {
		case BodyMatch.IsAnything:
		case BodyMatch.IsBlank:
		case BodyMatch.IsNotBlank:
			showContent = false;
			showContainsMatch = false;

			break;

		case BodyMatch.ContainsText:
			showContent = true;
			showContainsMatch = true;
			break;

		case BodyMatch.ExactMatch:
			showContent = true;
			showContainsMatch = false;
			break;

	}

	if ( showContent && requestBodyViewable ) {
		if ( requestBodyIsImage ) {
			$('#reqBody').removeClass('hide');
			$('#reqBodyImg').removeClass('hide');
		}
		else if ( requestBodyIsText ) {
			$('#reqBody').removeClass('hide');
			$('#reqBodyPre').removeClass('hide');
		}
		else if ( requestBodyIsBinary ) {
			$('#reqBodyLinkDiv').removeClass('hide');
		}
	}

	if ( showContainsMatch ) {
		ensureSingleTextCriteria();
		$("#match_div").removeClass('hide');
	}

}

function updateResponseBodyOptions() {

	var showContent = false;	
	var showModified = false;
	var value = Number($("input[name='resHdrBodyOpt']:checked").val());

	// hide everything
	$('#resBody').addClass('hide');
	$('#resBodyLinkDiv').addClass('hide');
	$('#resBodyTextArea').addClass('hide');

	switch ( value ) {

		case BodySource.NoBody:
			showContent = false;
			showModified = false;
			break;

		case BodySource.Origin:
			showContent = true;
			showModified = false;
			break;

		case BodySource.Modified:
			showContent = true;
			showModified = true;
			break;

	}

	if ( showContent && responseBodyViewable ) {

		if ( responseBodyIsImage ) {
			$('#resBody').removeClass('hide');
			$('#resBodyImg').removeClass('hide');
		}
		else if ( responseBodyIsText && !showModified ) {
			$('#resBody').removeClass('hide');
			$('#resBodyPre').removeClass('hide');
		}
		else if ( responseBodyIsBinary ) {
			$('#resBodyLinkDiv').removeClass('hide');
		}
		else if ( showModified ) {
			$('#resBodyTextArea').removeClass('hide');
		}

	}

}

@If.LoadStump

// --------------------------------------------
// View Stump
// --------------------------------------------
function viewStump(stumpId) {
	if ( lockLoad ) {
		return;
	}

	lockLoad = false;

	$.ajax({
        type: 'GET',
        contentType: 'application/json; charset-utf-8',
		url: '/api/proxy/@Model.ProxyId/stumps/' + stumpId,
        cache: false,
        success: viewStump_success,
		complete: viewStump_complete
    });

}

function viewStump_complete() {
	lockViewStump = false;
}

function viewStump_success(msg) {

	// Request - URL / HTTP Method
	$('#requrl_text').val(msg.RequestUrl);
	$('#requrl_chk').prop('checked', msg.RequestUrlMatch);
	$('#reqmethod_text').val(msg.RequestHttpMethod);
	$('#reqmethod_chk').prop('checked', msg.RequestHttpMethodMatch);

	// Request - Headers
	viewStump_updateRequestHeaders(msg.RequestHeaderMatch);

	// Request - Match Values
	viewStump_updateTextMatches(msg.RequestBodyMatchValues);

	// Request - Body
	viewStump_updateRequestBody(msg);

	// Response - Status
	$('#resstatuscode_text').val(msg.ResponseStatusCode);
	$('#resstatusdesc_text').val(msg.ResponseStatusDescription);

	// Response - Headers
	viewStump_updateResponseHeaders(msg.ResponseHeaders);

	// Response - Body
	viewStump_updateResponseBody(msg);

}

function viewStump_updateResponseBody(msg) {

	responseBody = msg.ResponseBody;
	responseBodyLength = msg.ResponseBodyLength;
	responseBodyIsImage = msg.ResponseBodyIsImage;
	responseBodyIsText = msg.ResponseBodyIsText;
	responseBodyIsBinary = ( responseBodyLength > 0 && !responseBodyIsImage && !responseBodyIsText );
	responseBodyViewable = ( responseBodyLength > 0 );

	if ( responseBodyLength == 0 ) {
		$('#resHdrBodyOpt2').attr('disabled', true);
	}
	else if ( responseBodyIsText ) {
		var pre = document.getElementById("resBodyPre");
		var ta = document.getElementById("resBodyTextArea");
		pre.textContent = responseBody;
		ta.textContent = responseBody;
	}
	else if ( responseBodyIsImage ) {
		$('#resBodyImg').attr('src', msg.ResponseBodyUrl);
		$('#resHdrBodyOpt3').attr('disabled', true);
	}
	else {
		$('#resBodyLink').attr('href', msg.ResponseBodyUrl);
		$('#resHdrBodyOpt3').attr('disabled', true);
	}

	// Request - Display Options
	var reqCheckMark = msg.RequestBodyMatch + 1;
	$('#reqHdrBodyOpt' + reqCheckMark).prop('checked', true);

	var resCheckMark = msg.ResponseBodySource + 1;
	$('#resHdrBodyOpt' + resCheckMark).prop('checked', true);

	updateResponseBodyOptions();

}

function viewStump_updateRequestBody(msg) {

	requestBody = msg.RequestBody;
	requestBodyLength = msg.RequestBodyLength;
	requestBodyIsImage = msg.RequestBodyIsImage;
	requestBodyIsText = msg.RequestBodyIsText;
	requestBodyIsBinary = ( requestBodyLength > 0 && !requestBodyIsImage && !requestBodyIsText );
	requestBodyViewable = ( requestBodyLength > 0 );

	if ( requestBodyLength == 0 ) {
		$('#reqHdrBodyOpt5').attr('disabled', true);
		$('#reqHdrBodyOpt4').attr('disabled', true);
	}
	else if ( requestBodyIsText ) {
		var pre = document.getElementById("reqBodyPre");
		pre.textContent = requestBody;
	}
	else if ( requestBodyIsImage ) {
		$('#reqBodyImg').attr('src', msg.RequestBodyUrl);
	}
	else {
		$('#reqBodyLink').attr('href', msg.RequestBodyUrl);
	}

	// Request - Display Options
	var checkMark = msg.RequestBodyMatch + 1;
	$('#reqHdrBodyOpt' + checkMark).prop('checked', true);

	updateRequestBodyOptions();

}

function viewStump_updateResponseHeaders(headers) {

	if ( headers == null ) {
		return;
	}

	var index = nextResponseHeaderIndex;

	if ( headers.length == 0 ) {

		var row = '<tr id="reshdr_' + index + '">' +
				'<td class="keyInput"><input type="text" id="reshdr_name_' + index + '" value="" /></td>' +
				'<td class="valueInput"><input type="text" id="reshdr_value_' + index + '" value="" /></td>' +
				'<td class="valueSelection"><input type="checkbox" id="reshdr_chk_' + index + '" /></td>' +
				'</tr>';

		$('#reshdr_tbl tbody').append(row);

		index++;

	}
	else {

		for ( var i = 0; i < headers.length; i++ ) {

			var headerLower = headers[i].Name.toLowerCase();

			if ( headerLower != 'host' && headerLower != 'date' && headerLower != 'content-length' ) {
				var row = '<tr id="reshdr_' + index + '">' +
						  '<td class="keyInput"><input type="text" id="reshdr_name_' + index + '" value="" /></td>' +
						  '<td class="valueInput"><input type="text" id="reshdr_value_' + index + '" value="" /></td>' +
						  '<td class="valueSelection"><input type="checkbox" id="reshdr_chk_' + index + '" /></td>' +
						  '</tr>';

				$('#reshdr_tbl tbody').append(row);

				$('#reshdr_name_' + index).val(headers[i].Name);
				$('#reshdr_value_' + index).val(headers[i].Value);
				$('#reshdr_chk_' + index).prop('checked', true);

				index++;
			}

		}

	}

	nextResponseHeaderIndex = index;

}

function viewStump_updateTextMatches(textMatches) {
	
	if ( textMatches == null ) {
		return;
	}

	$('#resBodyMatchValues').empty();

	for ( var i = 0; i < textMatches.length; i++ ) {

		var index = nextTextCriteria;

		var row = '<tr id="match_' + index + '">' +
					'<td class="matchInput"><input type="text" id="match_value_' + index + '" value="" /></td>' +
					'<td class="matchSelection"><input type="checkbox" id="match_chk_' + index + '" checked="checked"/></td>' +
					'</tr>';

		$('#match_tbl tbody').append(row);
		$('#match_value_' + index).val(textMatches[i]);

		index++;

	}

}

function viewStump_updateRequestHeaders(headers) {

	if ( headers == null ) {
		return;
	}

	var index = nextRequestHeaderIndex;

	if ( headers.length == 0 ) {
		
		var row = '<tr id="reqhdr_' + index + '">' +
			'<td class="keyInput"><input type="text" id="reqhdr_name_' + index + '" value="" /></td>' +
			'<td class="valueInput"><input type="text" id="reqhdr_value_' + index + '" value="" /></td>' +
			'<td class="valueSelection"><input type="checkbox" id="reqhdr_chk_' + index + '" /></td>' +
			'</tr>';

		$('#reqhdr_tbl tbody').append(row);

		index++;

	}
	else {

		for ( var i = 0; i < headers.length; i++ ) {

			var row = '<tr id="reqhdr_' + index + '">' +
						'<td class="keyInput"><input type="text" id="reqhdr_name_' + index + '" value="" /></td>' +
						'<td class="valueInput"><input type="text" id="reqhdr_value_' + index + '" value="" /></td>' +
						'<td class="valueSelection"><input type="checkbox" id="reqhdr_chk_' + index + '" /></td>' +
						'</tr>';

			$('#reqhdr_tbl tbody').append(row);

			$('#reqhdr_name_' + index).val(headers[i].Name);
			$('#reqhdr_value_' + index).val(headers[i].Value);
			$('#reqhdr_chk_' + index).prop('checked', true);

			index++;

		}

	}

	nextRequestHeaderIndex = index;

}

@EndIf

@If.LoadRecord

// --------------------------------------------
// View Request
// --------------------------------------------
function viewRequest(requestIndex) {
	
	if ( lockLoad ) {
		return;
	}

	lockLoad = true;

	$.ajax({
        type: 'GET',
        contentType: 'application/json; charset-utf-8',
		url: '/api/proxy/@Model.ProxyId/recording/' + requestIndex,
        cache: false,
        success: viewRequest_success,
		complete: viewRequest_complete
    });

}

function viewRequest_complete() {
	lockLoad = false;
}


function viewRequest_success(msg) {
		
	// Update request 
	$('#requrl_text').val(msg.RequestRawUrl);
	$('#reqmethod_text').val(msg.RequestHttpMethod);

	// Update request headers
	viewRequest_RequestUpdateHeaders(msg.RequestHeaders);

	// Update request body
	viewRequest_RequestUpdateBody(msg);

	// Update response
	$('#resstatuscode_text').val(msg.ResponseStatusCode);
	$('#resstatusdesc_text').val(msg.ResponseStatusDescription);

	// Update response headers
	viewRequest_ResponseUpdateHeaders(msg.ResponseHeaders);

	// Update response body
	viewRequest_ResponseUpdateBody(msg);

}

function viewRequest_RequestUpdateBody(msg) {

	requestBody = msg.RequestBody;
	requestBodyLength = msg.RequestBodyLength;
	requestBodyIsImage = msg.RequestBodyIsImage;
	requestBodyIsText = msg.RequestBodyIsText;
	requestBodyIsBinary = ( requestBodyLength > 0 && !requestBodyIsImage && !requestBodyIsText );
	requestBodyViewable = ( requestBodyLength > 0 );

	if ( requestBodyLength == 0 ) {
		$('#reqHdrBodyOpt5').attr('disabled', true);
		$('#reqHdrBodyOpt4').attr('disabled', true);
		$('#reqHdrBodyOpt2').attr('checked', true);
	}
	else if ( requestBodyIsText ) {
		var pre = document.getElementById("reqBodyPre");
		pre.textContent = requestBody;

		$('#reqHdrBodyOpt5').attr('checked', true);
	}
	else if ( requestBodyIsImage ) {
		$('#reqBodyImg').attr('src', msg.RequestBodyUrl);
		$('#reqHdrBodyOpt5').attr('checked', true);
	}
	else {
		$('#reqBodyLink').attr('href', msg.RequestBodyUrl);
		$('#reqHdrBodyOpt5').attr('checked', true);
	}

	updateRequestBodyOptions();

}

function viewRequest_ResponseUpdateBody(msg) {

	responseBody = msg.ResponseBody;
	responseBodyLength = msg.ResponseBodyLength;
	responseBodyIsImage = msg.ResponseBodyIsImage;
	responseBodyIsText = msg.ResponseBodyIsText;
	responseBodyIsBinary = ( responseBodyLength > 0 && !responseBodyIsImage && !responseBodyIsText );
	responseBodyViewable = ( responseBodyLength > 0 );

	if ( responseBodyLength == 0 ) {
		$('#resHdrBodyOpt2').attr('disabled', true);
		$('#resHdrBodyOpt1').attr('checked', true);
	}
	else if ( responseBodyIsText ) {
		var pre = document.getElementById("resBodyPre");
		var ta = document.getElementById("resBodyTextArea");
		pre.textContent = responseBody;
		ta.textContent = responseBody;

		$('#resHdrBodyOpt2').attr('checked', true);
	}
	else if ( responseBodyIsImage ) {
		$('#resBodyImg').attr('src', msg.ResponseBodyUrl);
		$('#resHdrBodyOpt3').attr('disabled', true);
		$('#resHdrBodyOpt2').attr('checked', true);
	}
	else {
		$('#resBodyLink').attr('href', msg.ResponseBodyUrl);
		$('#resHdrBodyOpt3').attr('disabled', true);
		$('#resHdrBodyOpt2').attr('checked', true);
	}

	updateResponseBodyOptions();

}

function viewRequest_RequestUpdateHeaders(headers) {

	var index = nextRequestHeaderIndex;

	for ( var i = 0; i < headers.length; i++ ) {

		var headerLower = headers[i].Name.toLowerCase();

		if ( headerLower != 'host' && headerLower != 'date' && headerLower != 'content-length' ) {
			var row = '<tr id="reqhdr_' + index + '">' +
					  '<td class="keyInput"><input type="text" id="reqhdr_name_' + index + '" value="" /></td>' +
					  '<td class="valueInput"><input type="text" id="reqhdr_value_' + index + '" value="" /></td>' +
					  '<td class="valueSelection"><input type="checkbox" id="reqhdr_chk_' + index + '" /></td>' +
					  '</tr>';

			$('#reqhdr_tbl tbody').append(row);

			$('#reqhdr_name_' + index).val(headers[i].Name);
			$('#reqhdr_value_' + index).val(headers[i].Value);

			index++;
		}

	}

	nextRequestHeaderIndex = index;

}

function viewRequest_ResponseUpdateHeaders(headers) {

	var index = nextResponseHeaderIndex;

	for ( var i = 0; i < headers.length; i++ ) {

		var headerLower = headers[i].Name.toLowerCase();

		if ( headerLower != 'host' && headerLower != 'date' && headerLower != 'content-length' ) {
			var row = '<tr id="reshdr_' + index + '">' +
					  '<td class="keyInput"><input type="text" id="reshdr_name_' + index + '" value="" /></td>' +
					  '<td class="valueInput"><input type="text" id="reshdr_value_' + index + '" value="" /></td>' +
					  '<td class="valueSelection"><input type="checkbox" id="reshdr_chk_' + index + '" checked="checked" /></td>' +
					  '</tr>';

			$('#reshdr_tbl tbody').append(row);

			$('#reshdr_name_' + index).val(headers[i].Name);
			$('#reshdr_value_' + index).val(headers[i].Value);

			index++;
		}

	}

	nextResponseHeaderIndex = index;

}

@EndIf

@EndSection
